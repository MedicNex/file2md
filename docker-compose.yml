version: '3.8'

services:
  # MedicNex File2MD API服务
  file2md-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: medicnex-file2md
    restart: unless-stopped
    ports:
      - "8999:8080"  # 映射到主机的8999端口
    environment:
      # 基础配置
      - PORT=8080
      - HOST=0.0.0.0
      - DEBUG=false
      - LOG_LEVEL=INFO
      
      # API安全配置
      - API_KEY=${API_KEY:-file2md-2024-secure-key}
      - REQUIRE_API_KEY=true
      
      # 并发和队列配置
      - MAX_CONCURRENT=5
      - QUEUE_CLEANUP_HOURS=24
      
      # 文件处理限制
      - MAX_FILE_SIZE=100  # MB
      - MAX_TEXT_LINES=50000
      - MAX_TEXT_CHARS=10000000
      - TEMP_DIR=/app/temp
      
      # Redis缓存配置
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=0
      - REDIS_CACHE_ENABLED=true
      - REDIS_CACHE_TTL=86400
      - REDIS_CONNECTION_TIMEOUT=5.0
      - REDIS_MAX_CONNECTIONS=20
      
      # Vision API配置 (可选)
      - VISION_API_KEY=${VISION_API_KEY:-}
      - VISION_API_BASE=${VISION_API_BASE:-https://api.openai.com/v1}
      - VISION_MODEL=${VISION_MODEL:-gpt-4o-mini}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      
      # CORS配置
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://127.0.0.1:3000}
      - CORS_ALLOW_CREDENTIALS=true
      
      # PaddleOCR配置
      - PADDLEOCR_HOME=/app/.paddleocr
    volumes:
      # 持久化PaddleOCR模型文件
      - paddleocr_models:/app/.paddleocr
      # 临时文件目录
      - temp_files:/app/temp
      # 日志目录
      - app_logs:/app/logs
    depends_on:
      - redis
    networks:
      - file2md-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # 资源限制
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: medicnex-redis
    restart: unless-stopped
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD:-}
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --save 60 1000
      --appendonly yes
    ports:
      - "6379:6379"  # 可选：映射Redis端口用于调试
    volumes:
      - redis_data:/data
    networks:
      - file2md-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: medicnex-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
      # SSL证书目录（如需要HTTPS）
      # - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - file2md-api
    networks:
      - file2md-network
    profiles:
      - with-nginx  # 使用 --profile with-nginx 启用

# 数据卷
volumes:
  # PaddleOCR模型文件持久化
  paddleocr_models:
    driver: local
  # Redis数据持久化
  redis_data:
    driver: local
  # 临时文件
  temp_files:
    driver: local
  # 应用日志
  app_logs:
    driver: local
  # Nginx日志
  nginx_logs:
    driver: local

# 网络配置
networks:
  file2md-network:
    driver: bridge 